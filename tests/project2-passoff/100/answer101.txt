Success!
Schemes(6):
  ancestorOf(x,y)
  childOf(x,y)
  relativeOf(x,y)
  descendantOf(x,y)
  marriedTo(x,y)
  siblingOf(x,y)
Facts(19):
  marriedTo('Zed','Bea').
  marriedTo('Jack','Jill').
  marriedTo('Ned','Jan').
  marriedTo('Tim','Jane').
  marriedTo('Fred','Anne').
  marriedTo('Dan','Kim').
  childOf('Jill','Zed').
  childOf('Ned','Bea').
  childOf('Tim','Jack').
  childOf('Sue','Jack').
  childOf('Anne','Jill').
  childOf('Stan','Jan').
  childOf('Dan','Jan').
  childOf('Lou','Jane').
  childOf('Mary','Tim').
  childOf('Bill','Fred').
  childOf('Tom','Fred').
  childOf('Ron','Dan').
  childOf('Anna','Kim').
Rules(7):
  marriedTo(X,Y) :- marriedTo(Y,X).
  childOf(X,Y) :- childOf(X,Z),marriedTo(Y,Z).
  siblingOf(X,Y) :- childOf(X,Z),childOf(Y,Z).
  descendantOf(X,Y) :- childOf(X,Y).
  descendantOf(X,Y) :- childOf(X,Z),descendantOf(Z,Y).
  ancestorOf(X,Y) :- descendantOf(Y,X).
  relativeOf(X,Y) :- descendantOf(X,Z),descendantOf(Y,Z).
Queries(15):
  marriedTo('Bea','Zed')?
  childOf('Jill','Bea')?
  siblingOf('Ron','Anna')?
  siblingOf('Tim','Sue')?
  siblingOf('Tim',X)?
  descendantOf('Lou','Zed')?
  descendantOf('Zed','Lou')?
  descendantOf('Lou',X)?
  ancestorOf('Tom','Bea')?
  ancestorOf('Bea','Tom')?
  ancestorOf('Bea',X)?
  relativeOf('Mary','Lou')?
  relativeOf('Mary','Bill')?
  relativeOf('Mary','Anna')?
  relativeOf('Mary','Kim')?
Domain(20):
  'Anna'
  'Anne'
  'Bea'
  'Bill'
  'Dan'
  'Fred'
  'Jack'
  'Jan'
  'Jane'
  'Jill'
  'Kim'
  'Lou'
  'Mary'
  'Ned'
  'Ron'
  'Stan'
  'Sue'
  'Tim'
  'Tom'
  'Zed'
